###
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) + geom_bar(position="dodge")
###
cabbage_exp
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) + geom_bar(position="dodge")
####
cabbage_exp
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) + geom_bar(stat="identity", position="dodge")
####
ggplot(pg_mean, aes(x=group, y=weight)) + geom_bar(stat="identity", fill="lightblue", colour="black")
#合併
cabbage_exp
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) + geom_bar(stat="identity", position="dodge")
####
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) +
geom_bar(stat="identity", position="dodge")
ce <- cabbage_exp[1:5, ]
ggplot(ce, aes(x=Date, y=Weight, fill=Cultivar)) +
geom_bar(stat = "identity", position="dodge", colour="black") +
scale_fill_brewer(palette="Pastel1")
BOD
str(BOD)
ggplot(BOD, aes(x=Time, y=demand)) + geom_bar(stat="identity")
ggplot(BOD, aes(x=factor(Time), y=demand)) + geom_bar(stat="identity")
#若少一筆資料
ce <- cabbage_exp[1:5, ]
ggplot(ce, aes(x=Date, y=Weight, fill=Cultivar)) +
geom_bar(stat = "identity", position="dodge", colour="black") +
scale_fill_brewer(palette="Pastel1")
ggplot(diamonds, aes(x=cut)) + geom_bar()
diamonds
View(Demad)
View(Demand)
names(diamonds)
ggplot(diamonds, aes(x=cut)) + geom_bar(stat="bin")
str(diamonds)
str(diamonds)
ggplot(diamonds, aes(x=cut)) + geom_bar(stat="bin")
ggplot(diamonds, aes(x=factor(cut))) + geom_bar(stat="bin")
ggplot(diamonds, aes(x=carat)) + geom_bar()
geom_histogram(diamonds)
geom_histogram(diamonds, aes(x=carat))
ggplot(diamonds, aes(x=carat),x=seq(1,3)) + geom_bar()
ggplot(diamonds, aes(x=carat),xlim=c(1,3)) + geom_bar()
##
str(diamonds)
ggplot(diamonds, aes(x=cut)) + geom_bar()
ggplot(diamonds, aes(x=carat)) + geom_bar()+ xlim(0,3)
ggplot(diamonds, aes(x=carat)) + geom_bar()+ xlim(0,3.5)
ggplot(diamonds, aes(x=carat)) + geom_bar()+ xlim(0,3.8)
ggplot(diamonds, aes(x=carat)) + geom_bar()+ xlim(0,4)
ggplot(diamonds, aes(x=carat)) + geom_bar()+ xlim(0,3)
max(diamonds)
max(diamonds$count)
max(diamonds$carat)
max(count(diamonds$carat))
count.fields(carat)
count.fields(diamonds$carat)
count(diamonds$carat)
summary(diamonds$carat)
summary(diamonds)
mode(diamonds$carat)
which.max(diamonds$carat)
ggplot(diamonds, aes(x=carat)) + geom_bar()+ xlim(0,3)＋ylim(0,28000)
ggplot(diamonds, aes(x=carat)) + geom_bar()+ xlim(0,3)
ggplot(diamonds, aes(x=carat)) + geom_bar()+ xlim(0,3)＋ylim(0,28000)
ggplot(diamonds, aes(x=carat)) + geom_bar()+ xlim(0,3)＋ylim(0,3000)
ggplot(diamonds, aes(x=carat)) + geom_bar()+ xlim(0,3)
ggplot(diamonds, aes(x=cut)) + geom_bar()
ggplot(diamonds, aes(x=carat)) + geom_bar()
ggplot(diamonds, aes(x=carat)) + geom_bar(stat="bin")
ggplot(diamonds, aes(x=cut)) + geom_bar(stat="bin")
ggplot(diamonds, aes(x=cut)) + geom_bar(stat="count")
ggplot(diamonds, aes(x=carat)) + geom_bar(stat="bin")+ xlim(0,3)
ggplot(diamonds, aes(x=carat)) + geom_bar()+ xlim(0,3)
ggplot(diamonds, aes(x=cut)) + geom_bar()
ggplot(diamonds, aes(x=cut)) + geom_bar(fill="lightblue")
ggplot(diamonds, aes(x=cut)) + geom_bar(fill="lightblue",colours="brown")
ggplot(diamonds, aes(x=cut)) + geom_bar(fill="lightblue",colour="brown")
ggplot(diamonds, aes(x=cut)) + geom_bar(fill="lightblue",colour="dark brown")
ggplot(diamonds, aes(x=cut)) + geom_bar(fill="lightblue",colour="lemonchiffon4")
ggplot(diamonds, aes(x=cut)) + geom_bar(stat="count",fill="lightblue",colour="lemonchiffon4")
ggplot(diamonds, aes(x=carat)) + geom_bar()+ xlim(0,3)
upc
upc <- subset(uspopchange, rank(Change)>40)
upc
ggplot(upc, aes(x=Abb, y=Change, fill=Region)) + geom_bar(stat="identity")
ggplot(upc, aes(x=Abb, y=Change, fill=Region)) + geom_bar(stat="identity")
ggplot(upc, aes(x=reorder(Abb, Change), y=Change, fill=Region)) +
geom_bar(stat="identity", colour="black") +
scale_fill_manual(values=c("#669933", "#FFCC66")) +
xlab("State")
ggplot(upc, aes(x=order(Abb, Change), y=Change, fill=Region)) +
geom_bar(stat="identity", colour="black") +
scale_fill_manual(values=c("#669933", "#FFCC66")) +
xlab("State")
ggplot(upc, aes(x=reorder(Abb, Change), y=Change, fill=Region)) +
geom_bar(stat="identity", colour="black") +
scale_fill_manual(values=c("#669933", "#FFCC66")) +
xlab("State")
ggplot(upc, aes(x=order(Abb, Change), y=Change, fill=Region)) +
geom_bar(stat="identity", colour="black") +
scale_fill_manual(values=c("#669933", "#FFCC66")) +
xlab("State")
ggplot(upc, aes(x=reorder(Abb, Change), y=Change, fill=Region)) +
geom_bar(stat="identity", colour="black") +
scale_fill_manual(values=c("#669933", "#FFCC66")) +
xlab("State")
upc <- subset(uspopchange, rank(Change)>40)
upc
ggplot(upc, aes(x=Abb, y=Change, fill=Region)) + geom_bar(stat="identity")
ggplot(upc, aes(x=reorder(Abb, Change), y=Change, fill=Region)) +
geom_bar(stat="identity", colour="black") +
scale_fill_manual(values=c("#669933", "#FFCC66")) +
xlab("State")
ggplot(upc, aes(x=reorder(Abb, Change), y=Change, fill=Region)) +
geom_bar(stat="identity", colour="black") +
scale_fill_manual(values=c("#darkseagreen1", "#khaki1")) +
xlab("State")
ggplot(upc, aes(x=reorder(Abb, Change), y=Change, fill=Region)) +
geom_bar(stat="identity", colour="black") +
scale_fill_manual(values=c("BCF68A", "F6F28A")) +
xlab("State")
ggplot(upc, aes(x=reorder(Abb, Change), y=Change, fill=Region)) +
geom_bar(stat="identity", colour="black") +
scale_fill_manual(values=c("darkseagreen1", "khaki1")) +
xlab("State")
ggplot(upc, aes(x=reorder(Abb, Change), y=Change, fill=Region)) +
geom_bar(stat="identity", colour="lemonchiffon4") +
scale_fill_manual(values=c("darkolivegreen1", "khaki1")) +
xlab("State")
ggplot(csub, aes(x=Year, y=Anomaly10y, fill=pos)) +
geom_bar(stat="identity", position="identity")
csub <- subset(climate, Source=="Berkeley" & Year >= 1900)
csub$pos <- csub$Anomaly10y >= 0
ggplot(csub, aes(x=Year, y=Anomaly10y, fill=pos)) +
geom_bar(stat="identity", position="identity")
ggplot(csub, aes(x=Year, y=Anomaly10y, fill=pos)) +
geom_bar(stat="identity", position="identity", colour="black", size=0.25) +
scale_fill_manual(values=c("#CCEEFF", "#FFDDDD"), guide=FALSE)
ggplot(pg_mean, aes(x=group, y=weight)) + geom_bar(stat="identity")
ggplot(pg_mean, aes(x=group, y=weight)) + geom_bar(stat="identity",fill="aquamarine")
ggplot(pg_mean, aes(x=group, y=weight)) + geom_bar(stat="identity",fill="aquamarine",colour="lemonchiffon4")
ggplot(pg_mean, aes(x=group, y=weight)) + geom_bar(stat="identity",width=0.5,fill="aquamarine",colour="lemonchiffon4")
ggplot(pg_mean, aes(x=group, y=weight)) + geom_bar(stat="identity",width=1,fill="aquamarine",colour="lemonchiffon4")
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) +
geom_bar(stat="identity", width=0.5, position="dodge")
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) +
geom_bar(stat="identity", width=0.5, position=position_dodge(0.7))
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) +
geom_bar(stat="identity")
geom_bar(position="dodge")
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) +
geom_bar(stat="identity", width=0.5, position="dodge")
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) +
geom_bar(stat="identity", width=0.5, position=position_dodge())
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) +
geom_bar(stat="identity", width=0.5,position=position_dodge(0.9))
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) +
geom_bar(stat="identity", width=0.5,width=0.9, position=position_dodge(width=0.9))
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) +
geom_bar(stat="identity", width=0.9,position=position_dodge(0.9))
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) +
geom_bar(stat="identity",,width=0.9, position=position_dodge(width=0.9))
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) +
geom_bar(stat="identity", width=0.9, position=position_dodge())
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) +
geom_bar(stat="identity",position=position_dodge(0.9))
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) +
geom_bar(stat="identity",,width=0.9, position=position_dodge(width=0.9))
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) +
geom_bar(stat="identity",position="dodge")
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) +
geom_bar(stat="identity",,width=0.9, position=position_dodge(width=0.9))
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) +
geom_bar(stat="identity",,width=0.2, position=position_dodge(width=0.9))
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) +
geom_bar(stat="identity",,width=0.9, position=position_dodge(width=0.9))
#3.7. Making a Stacked Bar Graph
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) +
geom_bar(stat="identity")
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) +
geom_bar(stat="identity")
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) +
geom_bar(stat="identity") +
guides(fill=guide_legend(reverse=TRUE))
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar, order=desc(Cultivar))) +
geom_bar(stat="identity")
libary(plyr) # Needed for desc()
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar, order=desc(Cultivar))) +
geom_bar(stat="identity")
libary(plyr)
library(plyr)
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar, order=desc(Cultivar))) +
geom_bar(stat="identity")
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar, order=desc(Cultivar))) +
geom_bar(stat="identity")
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) +
geom_bar(stat="identity")
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) +
geom_bar(stat="identity") +
guides(fill=guide_legend(reverse=TRUE))
library(plyr) # Needed for desc()
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar, order=desc(Cultivar))) +
geom_bar(stat="identity")
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) +
geom_bar(stat="identity")
library(plyr) # Needed for desc()
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar, order=desc(Cultivar))) +
geom_bar(stat="identity")
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) +
geom_bar(stat="identity", colour="black") +
guides(fill=guide_legend(reverse=TRUE)) +
scale_fill_brewer(palette="Pastel1")
ce <- ddply(cabbage_exp, "Date", transform,
percent_weight = Weight / sum(Weight) * 100)
ggplot(ce, aes(x=Date, y=percent_weight, fill=Cultivar)) +
geom_bar(stat="identity")
install.packages("ggplot2")
install.packages("gcookbook")
library(ggplot2)
library(gcookbook)
library(gcookbook) # For the data set
library(plyr)
a<-matrix(rnorm(100),10,10)
setwd("~/Desktop/b02208013/codepen/R")
install.packages("XML")
library(XML)
install.packages("httr")
library(httr)
install.packages("RCurl")
library(RCurl)
subPath <- "https://www.ptt.cc/bbs/movie/index"
startNO= 4633
endNO= 4637
alldata = data.frame()
for( pid in startNO:endNO )
{
urlPath=paste(subPath, pid, ".html", sep='')
temp=getURL(urlPath, encoding="big5")
xmldoc=htmlParse(temp)
#找出標題，但是不要/n和/t
title=xpathApply(xmldoc, "//div[@class=\"title\"]", xmlValue)
title=gsub("\n","",title)
title=gsub("\t","",title)
#網址
path=xpathApply(xmldoc,"//div[@class='title']/a//@href")
Errorresult=tryCatch(
{subdata=data.frame(title,path)
alldata=rbind(alldata,subdata)
},warning=function(war){print(paste("MY_WARNING:", urlPath))},
error=function(err){print(paste("MY_ERROR:", urlPath))},
finally={print(paste("End Try&Catch", urlPath))}
)
}
length(alldata)
for( pid in startNO:endNO )
{
urlPath=paste(subPath, pid, ".html", sep='')
temp=getURL(urlPath, encoding="big5")
xmldoc=htmlParse(temp)
#找出標題，但是不要/n和/t
title=xpathApply(xmldoc, "//div[@class=\"title\"]", xmlValue)
title=gsub("\n","",title)
title=gsub("\t","",title)
#網址
path=xpathApply(xmldoc,"//div[@class='title']/a//@href")
Errorresult=tryCatch(
{subdata=data.frame(title,path)
alldata=rbind(alldata,subdata)
},warning=function(war){print(paste("MY_WARNING:", urlPath))},
error=function(err){print(paste("MY_ERROR:", urlPath))},
finally={print(paste("End Try&Catch", urlPath))}
)
}
length(alldata)
write.table(alldata, file = "movie.csv")
rm(list=ls(all.names=TRUE))
subPath <- "https://www.ptt.cc/bbs/movie/index"
startNO= 4633
endNO= 4637
alldata = data.frame()
for( pid in startNO:endNO )
{
urlPath=paste(subPath, pid, ".html", sep='')
temp=getURL(urlPath, encoding="big5")
xmldoc=htmlParse(temp)
#找出標題，但是不要/n和/t
title=xpathApply(xmldoc, "//div[@class=\"title\"]", xmlValue)
title=gsub("\n","",title)
title=gsub("\t","",title)
#網址
path=xpathApply(xmldoc,"//div[@class='title']/a//@href")
Errorresult=tryCatch(
{subdata=data.frame(title,path)
alldata=rbind(alldata,subdata)
},warning=function(war){print(paste("MY_WARNING:", urlPath))},
error=function(err){print(paste("MY_ERROR:", urlPath))},
finally={print(paste("End Try&Catch", urlPath))}
)
}
title
path
alldata
Errorresult
subPath <- "https://www.ptt.cc/bbs/movie/index"
startNO= 4633
endNO= 4637
alldata = data.frame()
for( pid in startNO:endNO )
{
urlPath=paste(subPath, pid, ".html", sep='')
temp=getURL(urlPath, encoding="big5")
xmldoc=htmlParse(temp)
#找出標題，但是不要/n和/t
title=xpathSApply(xmldoc, "//div[@class=\"title\"]", xmlValue)
title=gsub("\n","",title)
title=gsub("\t","",title)
#網址
path=xpathSApply(xmldoc,"//div[@class='title']/a//@href")
Errorresult=tryCatch(
{subdata=data.frame(title,path)
alldata=rbind(alldata,subdata)
},warning=function(war){print(paste("MY_WARNING:", urlPath))},
error=function(err){print(paste("MY_ERROR:", urlPath))},
finally={print(paste("End Try&Catch", urlPath))}
)
}
alldata
write.table(alldata, file = "movie.csv")
suburlPath="https://www.ptt.cc"
for( i in 1:length(alldata[,1]) )
{
ipath=paste(suburlPath, alldata$path[i], sep='')
print(ipath)
content=getURL(ipath, encoding = "big5")
xmldoc=htmlParse(content)
article=xpathSApply(xmldoc, "//div[@id=\"main-content\"]", xmlValue)
filename=paste("./data/", i, ".csv", sep='')
write.csv(article, filename)
}
write.table(alldata, file = "movie.csv")
suburlPath="https://www.ptt.cc"
for( i in 1:length(alldata[,1]) )
{
ipath=paste(suburlPath, alldata$path[i], sep='')
print(ipath)
content=getURL(ipath, encoding = "big5")
xmldoc=htmlParse(content)
article=xpathSApply(xmldoc, "//div[@id=\"main-content\"]", xmlValue)
filename=paste("./data/", i, ".csv", sep='')
write.csv(article, filename)
}
Sys.setlocale(category = "LC_ALL", locale = "cht")
suburlPath="https://www.ptt.cc"
for( i in 1:length(alldata[,1]) )
{
ipath=paste(suburlPath, alldata$path[i], sep='')
print(ipath)
content=getURL(ipath, encoding = "big5")
xmldoc=htmlParse(content)
article=xpathSApply(xmldoc, "//div[@id=\"main-content\"]", xmlValue)
filename=paste("./data/", i, ".csv", sep='')
write.csv(article, filename)
}
Sys.setlocale(category = "LC_ALL", locale = "cht")
subPath <- "https://www.ptt.cc/bbs/movie/index"
startNO= 4633
endNO= 4637
alldata = data.frame()
for( pid in startNO:endNO )
{
urlPath=paste(subPath, pid, ".html", sep='')
temp=getURL(urlPath, encoding="big5")
xmldoc=htmlParse(temp)
#找出標題，但是不要/n和/t
title=xpathSApply(xmldoc, "//div[@class=\"title\"]", xmlValue)
title=gsub("\n","",title)
title=gsub("\t","",title)
#網址
path=xpathSApply(xmldoc,"//div[@class='title']/a//@href")
Errorresult=tryCatch(
{subdata=data.frame(title,path)
alldata=rbind(alldata,subdata)
},warning=function(war){print(paste("MY_WARNING:", urlPath))},
error=function(err){print(paste("MY_ERROR:", urlPath))},
finally={print(paste("End Try&Catch", urlPath))}
)
}
write.table(alldata, file = "movie.csv")
suburlPath="https://www.ptt.cc"
for( i in 1:length(alldata[,1]) )
{
ipath=paste(suburlPath, alldata$path[i], sep='')
print(ipath)
content=getURL(ipath, encoding = "big5")
xmldoc=htmlParse(content)
article=xpathSApply(xmldoc, "//div[@id=\"main-content\"]", xmlValue)
filename=paste("./data/", i, ".csv", sep='')
write.csv(article, filename)
}
rm(list=ls(all.names=TRUE))
Sys.setlocale(category = "LC_ALL", locale = "cht")
subPath <- "https://www.ptt.cc/bbs/movie/index"
startNO= 4633
endNO= 4637
alldata = data.frame()
for( pid in startNO:endNO )
{
urlPath=paste(subPath, pid, ".html", sep='')
temp=getURL(urlPath, encoding="big5")
xmldoc=htmlParse(temp)
#找出標題，但是不要/n和/t
title=xpathSApply(xmldoc, "//div[@class=\"title\"]", xmlValue)
title=gsub("\n","",title)
title=gsub("\t","",title)
#網址
path=xpathSApply(xmldoc,"//div[@class='title']/a//@href")
Errorresult=tryCatch(
{subdata=data.frame(title,path)
alldata=rbind(alldata,subdata)
},warning=function(war){print(paste("MY_WARNING:", urlPath))},
error=function(err){print(paste("MY_ERROR:", urlPath))},
finally={print(paste("End Try&Catch", urlPath))}
)
}
write.table(alldata, file = "movie.csv")
suburlPath="https://www.ptt.cc"
for( i in 1:length(alldata[,1]) )
{
ipath=paste(suburlPath, alldata$path[i], sep='')
print(ipath)
content=getURL(ipath, encoding = "big5")
xmldoc=htmlParse(content)
article=xpathSApply(xmldoc, "//div[@id=\"main-content\"]", xmlValue)
filename=paste("./data/", i, ".csv", sep='')
write.csv(article, filename)
}
alldata = data.frame()
for( pid in startNO:endNO )
{
urlPath=paste(subPath, pid, ".html", sep='')
temp=getURL(urlPath, encoding="big5")
xmldoc=htmlParse(temp)
title=xpathSApply(xmldoc, "//div[@class=\"story\"]//h4", xmlValue)
path=xpathSApply(xmldoc,"//div[@class='title']/a//@href")
Errorresult=tryCatch(
{subdata=data.frame(title,path)
alldata=rbind(alldata,subdata)
},warning=function(war){print(paste("MY_WARNING:", urlPath))},
error=function(err){print(paste("MY_ERROR:", urlPath))},
finally={print(paste("End Try&Catch", urlPath))}
)
}
subPath <- "https://tw.news.yahoo.com/world/archive/"
startNO= 1
endNO= 10
alldata = data.frame()
for( pid in startNO:endNO )
{
urlPath=paste(subPath, pid, ".html", sep='')
temp=getURL(urlPath, encoding="big5")
xmldoc=htmlParse(temp)
title=xpathSApply(xmldoc, "//div[@class=\"story\"]//h4", xmlValue)
path=xpathSApply(xmldoc,"//div[@class='title']/a//@href")
Errorresult=tryCatch(
{subdata=data.frame(title,path)
alldata=rbind(alldata,subdata)
},warning=function(war){print(paste("MY_WARNING:", urlPath))},
error=function(err){print(paste("MY_ERROR:", urlPath))},
finally={print(paste("End Try&Catch", urlPath))}
)
}
write.table(alldata, file = "news.csv")
title
path
for( pid in startNO:endNO )
{
urlPath=paste(subPath, pid, ".html", sep='')
temp=getURL(urlPath, encoding="big5")
xmldoc=htmlParse(temp)
title=xpathSApply(xmldoc, "//div[@class=\"story\"]//h4", xmlValue)
path=xpathSApply(xmldoc,"//div[@class='story']/a//@href")
Errorresult=tryCatch(
{subdata=data.frame(title,path)
alldata=rbind(alldata,subdata)
},warning=function(war){print(paste("MY_WARNING:", urlPath))},
error=function(err){print(paste("MY_ERROR:", urlPath))},
finally={print(paste("End Try&Catch", urlPath))}
)
}
path
subPath <- "https://tw.news.yahoo.com/world/archive/"
startNO= 1
endNO= 10
alldata = data.frame()
for( pid in startNO:endNO )
{
urlPath=paste(subPath, pid, ".html", sep='')
temp=getURL(urlPath, encoding="big5")
xmldoc=htmlParse(temp)
title=xpathSApply(xmldoc, "//div[@class=\"story\"]//h4", xmlValue)
path=xpathSApply(xmldoc,"//div[@class=\"story\"]//a[@class=\"more\"]//@href")
Errorresult=tryCatch(
{subdata=data.frame(title,path)
alldata=rbind(alldata,subdata)
},warning=function(war){print(paste("MY_WARNING:", urlPath))},
error=function(err){print(paste("MY_ERROR:", urlPath))},
finally={print(paste("End Try&Catch", urlPath))}
)
}
path
